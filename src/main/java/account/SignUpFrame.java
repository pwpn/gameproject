/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package account;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author w1505
 */
public class SignUpFrame extends javax.swing.JFrame {

    /**
     * Creates new form SignUpFrame
     */
    public SignUpFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PasswordField = new javax.swing.JPasswordField();
        UserNameText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SignUpButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ConfirmField = new javax.swing.JPasswordField();
        HintLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SignInLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sign Up");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(100, 100));
        setName("SignUpFrame"); // NOI18N
        setResizable(false);

        PasswordField.setInheritsPopupMenu(true);

        UserNameText.setToolTipText("");
        UserNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UserNameTextKeyPressed(evt);
            }
        });

        jLabel1.setText("User Name");

        jLabel2.setText("Password");

        SignUpButton.setText("Sign Up");
        SignUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Confirm Your Password");

        ConfirmField.setAutoscrolls(false);
        ConfirmField.setInheritsPopupMenu(true);
        ConfirmField.setInputVerifier(PasswordField.getInputVerifier());

        HintLabel.setForeground(new java.awt.Color(255, 0, 0));
        HintLabel.setFocusable(false);
        HintLabel.setInheritsPopupMenu(false);

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel4.setText("SIGN UP");

        jLabel5.setText("Already have an account?");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel5.setFocusable(false);
        jLabel5.setIconTextGap(0);
        jLabel5.setRequestFocusEnabled(false);
        jLabel5.setVerifyInputWhenFocusTarget(false);
        jLabel5.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        SignInLabel.setForeground(new java.awt.Color(0, 0, 242));
        SignInLabel.setText("Sign in");
        SignInLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        SignInLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignInLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignInLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HintLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SignUpButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(SignInLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PasswordField)
                                    .addComponent(UserNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                    .addComponent(ConfirmField)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(jLabel4)))))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SignInLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignUpButton)
                    .addComponent(HintLabel))
                .addGap(43, 43, 43))
        );

        UserNameText.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleName("SignUp");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //When click the "Sign In" label
    private void SignInLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignInLabelMouseClicked

            //Open the SignInFrame
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new SignInFrame().setVisible(true);
                }
            });
            //Close this frame
            this.dispose();
    }//GEN-LAST:event_SignInLabelMouseClicked

    private void UserNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserNameTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameTextKeyPressed

    private void SignUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpButtonActionPerformed
        Boolean ContextConfirmed=false;
        SignCheck sc=new SignCheck();
        switch(sc.CheckTexts(this.UserNameText, "abcdefghijklmnopqrstuvwxyz1234567890", 3, 10)){
            case 0:switch(sc.CheckTexts(this.PasswordField, null, 6, 20)){
                case 0:
                {
                    if(sc.CompareTexts(ConfirmField, PasswordField))
                        ContextConfirmed=true;
                    else
                        this.HintLabel.setText("Confirm your password");
                }
                break;
                case 1:this.HintLabel.setText("Input the password");
                break;
                case 2:this.HintLabel.setText("Password should be at the length of 6 to 20");
                break;
                case 3:this.HintLabel.setText("Invailed characters included");
            }
            break;
            case 1:this.HintLabel.setText("Input the username");
            break;
            case 2:this.HintLabel.setText("Username should be at the length of 3 to 10");
            break;
            case 3:this.HintLabel.setText("Invailed username");
        }
        if(ContextConfirmed){
            this.HintLabel.setForeground(new Color(0,0,0));
            this.HintLabel.setText("Context checked, now connecting...");
            DerbyUser Dbu=new DerbyUser(this.UserNameText.getText(),sc.PasswordTrans(ConfirmField));
            if(Dbu.Connect()&&Dbu.StatementCreate())
                {
                    this.HintLabel.setText("Connect successfully, account creating...");
                try {
                    switch(Dbu.Register()){
                        case 0:this.HintLabel.setText("The account has been created successfully");
                        this.HintLabel.setForeground(new Color(34,177,76));
                        break;
                        case 1:this.HintLabel.setText("The username already exists");
                        this.HintLabel.setForeground(new Color(255,0,0));
                        break;
                        case 2:this.HintLabel.setText("Connection Failed");
                        this.HintLabel.setForeground(new Color(255,0,0));
                        break;
                        case 3:this.HintLabel.setText("Error occurs while adding");
                        this.HintLabel.setForeground(new Color(255,0,0));
                        break;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(SignUpFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    
                } catch (Exception ex) {
                    Logger.getLogger(SignUpFrame.class.getName()).log(Level.SEVERE, "State Failed", ex);
                    this.HintLabel.setText("Error occurs while adding");
                    this.HintLabel.setForeground(new Color(255,0,0));
                }

                }
            else
            {
                this.HintLabel.setText("Connection failed");
                this.HintLabel.setForeground(new Color(255,0,0));
            }
        
        }
//        //Check the username
//        boolean Confirmed=true;
//        String Username="ABC";
//        String Password="123456";
//        String AllowedChars=;
//        if (this.UserNameText.getText().isBlank()){
//            this.HintLabel.setText("Input the username");
//            Confirmed=false;
//        }
//        else
//        if(this.UserNameText.getText().length()<3||this.UserNameText.getText().length()>10){
//            this.HintLabel.setText("Username should be at the length of 3 to 10");
//            Confirmed=false;
//        }
//        else
//        //Check invailed chars
//        for(int i=0;i<this.UserNameText.getText().length();i++)
//        if(AllowedChars.indexOf(this.UserNameText.getText().toLowerCase().charAt(i))==-1){
//            this.HintLabel.setText("Invailed username");
//            Confirmed=false;
//            break;
//        }
//        else
//        //Check password
//        {Username=this.UserNameText.getText();
//            if (this.PasswordField.getPassword().length<6||this.PasswordField.getPassword().length>20){
//                this.HintLabel.setText("Password should be at the length of 6 to 20");
//                Confirmed=false;
//            }
//            else
//            //Confirm the password
//            if (!Arrays.toString(this.PasswordField.getPassword()).equals(Arrays.toString(this.ConfrimField.getPassword()))){
//                this.HintLabel.setText("Please confirm your password");
//                Confirmed=false;
//            } else {
//            }
//        }
//        if(Confirmed){
//            //Translate the password
//            Password="";
//            for(char x:this.PasswordField.getPassword())
//                Password+=x;
//            //Go into the database
//            String url="jdbc:derby://localhost:1527/Account;create=true";
//            //Try to connect
//            try {
//                Connection connection=DriverManager.getConnection(url,"Test","123");
//                //Make statements
//                Statement statement=connection.createStatement();
//                //Check the username;
//                ResultSet rs=statement.executeQuery("select count(username) from account where username='"+Username+"'");
//                rs.next();
//                if(rs.getInt(1)!=0){
//                    this.HintLabel.setText("The username already exists");
//                    Confirmed=false;
//                }
//                //Create a new account
//                if(Confirmed){
//                    try{rs=statement.executeQuery("Select count(*) from ACCOUNT");
//                        rs.next();
//                        //Create ID
//                        int ID=10001+rs.getInt(1);
//                        statement.executeUpdate("INSERT INTO TEST.ACCOUNT (USERID, USERNAME, PASSWORD, AVAILABILITY) VALUES ("+ID+", '"+Username+"', '"+Password+"', DEFAULT)");
//                        this.HintLabel.setForeground(new Color(34,177,76));
//                        this.HintLabel.setText("Account is created successfully");
//                    }catch(SQLException ex){
//                        this.HintLabel.setText("Failed to add account");
//                        Logger.getLogger(SignUpFrame.class.getName()).log(Level.SEVERE, "Failed to add account", ex);
//                    }
//                }
//            } catch (SQLException ex) {
//                this.HintLabel.setText("Connection failed");
//                Logger.getLogger(SignUpFrame.class.getName()).log(Level.SEVERE, "Connection Failed", ex);
//            }
//        }
    }//GEN-LAST:event_SignUpButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpFrame().setVisible(true);
               
            }

        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField ConfirmField;
    private javax.swing.JLabel HintLabel;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel SignInLabel;
    private javax.swing.JButton SignUpButton;
    private javax.swing.JTextField UserNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
